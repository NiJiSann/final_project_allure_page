{"uid":"56efccee53515b72","name":"check given variants","fullName":"tests.test_flight_page.TestBookingFlight#test_check_bars","historyId":"f7d7b2793a05b6f2da510f44803da6d5","time":{"start":1707384777855,"stop":1707384788909,"duration":11054},"description":"function clicks nav bar steps to check various recommendations of web-interface","descriptionHtml":"<p>function clicks nav bar steps to check various recommendations of web-interface</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[contains(text(), \"Quickest\")]\"}\n  (Session info: chrome-headless-shell=121.0.6167.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00A71673+52979]\n\t(No symbol) [0x009F7961]\n\t(No symbol) [0x008DDD3D]\n\t(No symbol) [0x00915FBB]\n\t(No symbol) [0x009160FB]\n\t(No symbol) [0x0094CF92]\n\t(No symbol) [0x00934534]\n\t(No symbol) [0x0094B3FE]\n\t(No symbol) [0x00934286]\n\t(No symbol) [0x0090C063]\n\t(No symbol) [0x0090CECD]\n\tGetHandleVerifier [0x00D88D83+3294723]\n\tGetHandleVerifier [0x00DC6CC2+3548482]\n\tGetHandleVerifier [0x00DC1C9C+3527964]\n\tGetHandleVerifier [0x00B0870E+671630]\n\t(No symbol) [0x00A01EB4]\n\t(No symbol) [0x009FD808]\n\t(No symbol) [0x009FD92D]\n\t(No symbol) [0x009EF7E0]\n\tBaseThreadInitThunk [0x75D77BA9+25]\n\tRtlInitializeExceptionChain [0x7732BD2B+107]\n\tRtlClearBits [0x7732BCAF+191]","statusTrace":"self = <tests.test_flight_page.TestBookingFlight object at 0x000001D9854D5A30>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"226e2bfabf5740c490e9b5c019ed0e1b\")>\nexpected = 'Quickest'\n\n    @allure.title('check given variants')\n    @allure.description('function clicks nav bar steps to check various recommendations of web-interface')\n    @pytest.mark.parametrize('expected', ['Best', 'Cheapest', 'Quickest'])\n    def test_check_bars(self, driver, expected):\n        chb = FlightSteps(driver)\n        if expected == 'Best':\n            chb.check_best()\n        elif expected == 'Cheapest':\n            chb.check_cheapest()\n        elif expected == 'Quickest':\n>           chb.check_quickest()\n\ntests\\test_flight_page.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nfinal_project\\steps\\flightSteps.py:38: in check_quickest\n    quick_btn = self.find(fmp.Quickest)\nfinal_project\\steps\\common_actions.py:18: in find\n    return self.driver.find_element(*locator)\n..\\..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\final-project-_bDwe8AE-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\final-project-_bDwe8AE-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001D983B64EC0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x75D77BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x7732BD2B+107]\\\\n\\\\tRtlClearBits [0x7732BCAF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[contains(text(), \"Quickest\")]\"}\nE         (Session info: chrome-headless-shell=121.0.6167.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00A71673+52979]\nE       \t(No symbol) [0x009F7961]\nE       \t(No symbol) [0x008DDD3D]\nE       \t(No symbol) [0x00915FBB]\nE       \t(No symbol) [0x009160FB]\nE       \t(No symbol) [0x0094CF92]\nE       \t(No symbol) [0x00934534]\nE       \t(No symbol) [0x0094B3FE]\nE       \t(No symbol) [0x00934286]\nE       \t(No symbol) [0x0090C063]\nE       \t(No symbol) [0x0090CECD]\nE       \tGetHandleVerifier [0x00D88D83+3294723]\nE       \tGetHandleVerifier [0x00DC6CC2+3548482]\nE       \tGetHandleVerifier [0x00DC1C9C+3527964]\nE       \tGetHandleVerifier [0x00B0870E+671630]\nE       \t(No symbol) [0x00A01EB4]\nE       \t(No symbol) [0x009FD808]\nE       \t(No symbol) [0x009FD92D]\nE       \t(No symbol) [0x009EF7E0]\nE       \tBaseThreadInitThunk [0x75D77BA9+25]\nE       \tRtlInitializeExceptionChain [0x7732BD2B+107]\nE       \tRtlClearBits [0x7732BCAF+191]\n\n..\\..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\final-project-_bDwe8AE-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1707383607643,"stop":1707383607688,"duration":45},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"driver","time":{"start":1707383779735,"stop":1707383783214,"duration":3479},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"description":"function clicks nav bar steps to check various recommendations of web-interface","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[contains(text(), \"Quickest\")]\"}\n  (Session info: chrome-headless-shell=121.0.6167.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00A71673+52979]\n\t(No symbol) [0x009F7961]\n\t(No symbol) [0x008DDD3D]\n\t(No symbol) [0x00915FBB]\n\t(No symbol) [0x009160FB]\n\t(No symbol) [0x0094CF92]\n\t(No symbol) [0x00934534]\n\t(No symbol) [0x0094B3FE]\n\t(No symbol) [0x00934286]\n\t(No symbol) [0x0090C063]\n\t(No symbol) [0x0090CECD]\n\tGetHandleVerifier [0x00D88D83+3294723]\n\tGetHandleVerifier [0x00DC6CC2+3548482]\n\tGetHandleVerifier [0x00DC1C9C+3527964]\n\tGetHandleVerifier [0x00B0870E+671630]\n\t(No symbol) [0x00A01EB4]\n\t(No symbol) [0x009FD808]\n\t(No symbol) [0x009FD92D]\n\t(No symbol) [0x009EF7E0]\n\tBaseThreadInitThunk [0x75D77BA9+25]\n\tRtlInitializeExceptionChain [0x7732BD2B+107]\n\tRtlClearBits [0x7732BCAF+191]","statusTrace":"self = <tests.test_flight_page.TestBookingFlight object at 0x000001D9854D5A30>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"226e2bfabf5740c490e9b5c019ed0e1b\")>\nexpected = 'Quickest'\n\n    @allure.title('check given variants')\n    @allure.description('function clicks nav bar steps to check various recommendations of web-interface')\n    @pytest.mark.parametrize('expected', ['Best', 'Cheapest', 'Quickest'])\n    def test_check_bars(self, driver, expected):\n        chb = FlightSteps(driver)\n        if expected == 'Best':\n            chb.check_best()\n        elif expected == 'Cheapest':\n            chb.check_cheapest()\n        elif expected == 'Quickest':\n>           chb.check_quickest()\n\ntests\\test_flight_page.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nfinal_project\\steps\\flightSteps.py:38: in check_quickest\n    quick_btn = self.find(fmp.Quickest)\nfinal_project\\steps\\common_actions.py:18: in find\n    return self.driver.find_element(*locator)\n..\\..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\final-project-_bDwe8AE-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\final-project-_bDwe8AE-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001D983B64EC0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...dInitThunk [0x75D77BA9+25]\\\\n\\\\tRtlInitializeExceptionChain [0x7732BD2B+107]\\\\n\\\\tRtlClearBits [0x7732BCAF+191]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[contains(text(), \"Quickest\")]\"}\nE         (Session info: chrome-headless-shell=121.0.6167.160); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00A71673+52979]\nE       \t(No symbol) [0x009F7961]\nE       \t(No symbol) [0x008DDD3D]\nE       \t(No symbol) [0x00915FBB]\nE       \t(No symbol) [0x009160FB]\nE       \t(No symbol) [0x0094CF92]\nE       \t(No symbol) [0x00934534]\nE       \t(No symbol) [0x0094B3FE]\nE       \t(No symbol) [0x00934286]\nE       \t(No symbol) [0x0090C063]\nE       \t(No symbol) [0x0090CECD]\nE       \tGetHandleVerifier [0x00D88D83+3294723]\nE       \tGetHandleVerifier [0x00DC6CC2+3548482]\nE       \tGetHandleVerifier [0x00DC1C9C+3527964]\nE       \tGetHandleVerifier [0x00B0870E+671630]\nE       \t(No symbol) [0x00A01EB4]\nE       \t(No symbol) [0x009FD808]\nE       \t(No symbol) [0x009FD92D]\nE       \t(No symbol) [0x009EF7E0]\nE       \tBaseThreadInitThunk [0x75D77BA9+25]\nE       \tRtlInitializeExceptionChain [0x7732BD2B+107]\nE       \tRtlClearBits [0x7732BCAF+191]\n\n..\\..\\..\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\final-project-_bDwe8AE-py3.12\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException","steps":[],"attachments":[{"uid":"48a8f831db405b67","name":"tests_test_flight_page.py__TestBookingFlight__test_check_bars[Quickest]_2024-02-08_14-33-08.png","source":"48a8f831db405b67.png","type":"image/png","size":50635},{"uid":"5eda25ae7ece3671","name":"source HTML","source":"5eda25ae7ece3671.html","type":"text/html","size":182260}],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentStep":false,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[{"name":"driver::0","time":{"start":1707385338969,"stop":1707385341090,"duration":2121},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"epic","value":"Main Epic"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_flight_page"},{"name":"subSuite","value":"TestBookingFlight"},{"name":"host","value":"Alice"},{"name":"thread","value":"16592-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_flight_page"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected","value":"'Quickest'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"56efccee53515b72.json","parameterValues":["'Quickest'"]}